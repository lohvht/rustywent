// This benchmark stresses both field and method lookup.

type Foo object(
    field0, field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16, field17, field18, field19, field20, field21, field22,
    field23, field24, field25, field26, field27, field28, field29) {
  func method0() { return self.field0; }
  func method1() { return self.field1; }
  func method2() { return self.field2; }
  func method3() { return self.field3; }
  func method4() { return self.field4; }
  func method5() { return self.field5; }
  func method6() { return self.field6; }
  func method7() { return self.field7; }
  func method8() { return self.field8; }
  func method9() { return self.field9; }
  func method10() { return self.field10; }
  func method11() { return self.field11; }
  func method12() { return self.field12; }
  func method13() { return self.field13; }
  func method14() { return self.field14; }
  func method15() { return self.field15; }
  func method16() { return self.field16; }
  func method17() { return self.field17; }
  func method18() { return self.field18; }
  func method19() { return self.field19; }
  func method20() { return self.field20; }
  func method21() { return self.field21; }
  func method22() { return self.field22; }
  func method23() { return self.field23; }
  func method24() { return self.field24; }
  func method25() { return self.field25; }
  func method26() { return self.field26; }
  func method27() { return self.field27; }
  func method28() { return self.field28; }
  func method29() { return self.field29; }
}

foo := Foo(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1);
start := clock()
i := 0
for i < 500000 {
  foo.method0()
  foo.method1()
  foo.method2()
  foo.method3()
  foo.method4()
  foo.method5()
  foo.method6()
  foo.method7()
  foo.method8()
  foo.method9()
  foo.method10()
  foo.method11()
  foo.method12()
  foo.method13()
  foo.method14()
  foo.method15()
  foo.method16()
  foo.method17()
  foo.method18()
  foo.method19()
  foo.method20()
  foo.method21()
  foo.method22()
  foo.method23()
  foo.method24()
  foo.method25()
  foo.method26()
  foo.method27()
  foo.method28()
  foo.method29()
  i = i + 1
}

print clock() - start;